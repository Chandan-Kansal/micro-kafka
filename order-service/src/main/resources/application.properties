spring.datasource.url=jdbc:mysql://localhost:3306/orderservice
spring.datasource.username=root
spring.datasource.password=root@345
spring.jpa.hibernate.ddl-auto=update
logging.level.web=debug
server.port=8081
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.orderservice.event.OrderPlacedEvent
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true



resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size = 10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType = COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize = 5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState = 5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled = True